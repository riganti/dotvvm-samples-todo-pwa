@import "responsive";

@mixin flex-wrapper-row($items-grow: 0, $items-shrink: 0, $items-width: 30%, $items-align: flex-start, $justify-content: space-between) {
    display: -webkit-box;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: row;
    -moz-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-flex-wrap: wrap;
    -moz-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    -webkit-align-items: $items-align;
    -moz-align-items: $items-align;
    align-items: $items-align;
    -webkit-justify-content: $justify-content;
    -moz-justify-content: $justify-content;
    justify-content: $justify-content;
    width: 100%;
    -webkit-box-direction: normal;
    -webkit-box-orient: horizontal;

    @if $justify-content == flex-start {
        -webkit-box-pack: start;
        -ms-flex-pack: start;
    }
    @else if $justify-content == flex-end {
        -webkit-box-pack: end;
        -ms-flex-pack: end;
    }
    @else if $justify-content == space-between {
        -webkit-box-pack: justify;
        -ms-flex-pack: justify;
    }
    @else if $justify-content == space-around {
        -ms-flex-pack: distribute;
    }
    @else {
        -webkit-box-pack: $justify-content;
        -ms-flex-pack: $justify-content;
    }

    @if $items-align == flex-start {
        -webkit-box-align: start;
        -ms-flex-align: start;
    }
    @else if $items-align == flex-end {
        -webkit-box-align: end;
        -ms-flex-align: end;
    }
    @else {
        -webkit-box-align: $items-align;
        -ms-flex-align: $items-align;
    }

    & > * {
        @if $items-grow == true {
            -webkit-box-flex: 1;
            -webkit-flex-grow: 1;
            -moz-flex-grow: 1;
            -ms-flex-positive: 1;
            flex-grow: 1;
        }
        @else if $items-grow == 1 {
            -webkit-box-flex: 1;
            -webkit-flex-grow: 1;
            -moz-flex-grow: 1;
            -ms-flex-positive: 1;
            flex-grow: 1;
        }
        @else {
            -webkit-box-flex: 0;
            -webkit-flex-grow: 0;
            -moz-flex-grow: 0;
            -ms-flex-positive: 0;
            flex-grow: 0;
        }

        @if $items-shrink == true {
            -webkit-flex-shrink: 1;
            -moz-flex-shrink: 1;
            -ms-flex-negative: 1;
            flex-shrink: 1;
        }
        @else if $items-shrink == 1 {
            -webkit-flex-shrink: 1;
            -moz-flex-shrink: 1;
            -ms-flex-negative: 1;
            flex-shrink: 1;
        }
        @else {
            -webkit-flex-shrink: 0;
            -moz-flex-shrink: 0;
            -ms-flex-negative: 0;
            flex-shrink: 0;
        }

        -webkit-flex-basis: $items-width;
        -moz-flex-basis: $items-width;
        flex-basis: $items-width;
        width: $items-width;
        box-sizing: border-box;
        -ms-flex-preferred-size: $items-width;
    }

    @include res-max-mobile-l {
        -webkit-flex-direction: column;
        -moz-flex-direction: column;
        -ms-flex-direction: column;
        flex-direction: column;
        -webkit-box-direction: normal;
        -webkit-box-orient: vertical;

        & > * {
            width: 100%;

            &:not(:last-child) {
                margin-bottom: 1rem;
            }
        }
    }
}

// Flexbox Order
// The 'order' property controls the order in which flex items appear within
// their flex container, by assigning them to ordinal groups.

@mixin flex-order-item($int) {
    -webkit-order: $int;
    -moz-order: $int;
    order: $int;
    -webkit-box-ordinal-group: $int + 1;
    -ms-flex-order: $int;
}
